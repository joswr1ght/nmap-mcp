[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nmap-mcp"
version = "1.0.0"
description = "A Model Context Protocol server that provides Nmap scanning capabilities"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Joshua Wright", email = "jwright@hasborg.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Networking :: Monitoring",
]
requires-python = ">=3.10"
dependencies = [
    "mcp",
    "sse-starlette",
    "python-nmap",
    "starlette",
    "uvicorn",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0",
    "isort>=5.12",
    "mypy>=1.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/nmap-mcp"
Repository = "https://github.com/yourusername/nmap-mcp.git"
Issues = "https://github.com/yourusername/nmap-mcp/issues"

[project.scripts]
nmap-mcp = "nmap_mcp:main"

[tool.hatch.build.targets.wheel]
packages = ["nmap_mcp.py"]

[tool.black]
line-length = 100
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
